{"version":3,"sources":["images/minimal.jpg","ItemComponent sync","images/EricGlasses.jpg","ItemComponent/ItemComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","ItemComponent","state","handleInputChangeFor","propertyName","event","setState","target","value","className","src","require","this","props","imagePath","width","url","resourceCode","title","itemText","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sLAAAA,EAAOC,QAAU,IAA0B,qC,iBCA3C,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBO,GAAK,I,mBCRzBT,EAAOC,QAAU,IAA0B,yC,uJCuC5BS,E,4MA/BbC,MAAQ,G,EAERC,qBAAuB,SAACC,GAAD,OAAkB,SAACC,GACxC,EAAKC,SAAL,eACGF,EAAeC,EAAME,OAAOC,U,oGAK/B,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,oBACb,yBAAKC,IAAKC,MAAQC,KAAKC,MAAMC,aAE7B,yBAAKL,UAAU,kBACb,kBAAC,IAAD,CACEM,MAAM,OACNC,IAAKJ,KAAKC,MAAMI,gBAGnBL,KAAKC,MAAMI,cAEd,yBAAKR,UAAU,wBACb,4BAAKG,KAAKC,MAAMK,OACfN,KAAKC,MAAMM,e,GA3BMC,aC4DbC,MA7Df,WACE,OACE,oCACE,yBAAKZ,UAAU,sBACb,yBACEA,UAAU,cACVC,IAAKC,EAAQ,MAEf,8CACA,6EAEA,yBAAKF,UAAU,OACf,yCACA,yBAAKA,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,gDACNC,SAAS,wSAEX,yBAAKV,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,6BACNC,SAAS,0OAEX,yBAAKV,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,4BACNC,SAAS,oQAEX,yBAAKV,UAAU,OACf,0CACA,yBAAKA,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,mDACNC,SAAS,kGACTF,aAAa,gCAEf,yBAAKR,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,8BACNC,SAAS,uFACTF,aAAa,gCAGf,yBAAKR,UAAU,OACf,kBAAC,EAAD,CACEK,UAAU,sBACVI,MAAM,mFACNC,SAAS,sHAEX,yBAAKV,UAAU,OACf,2FC/CYa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6e196058.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minimal.824e007c.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/EricGlasses.554f2e30.jpg\";","import React, { Component } from \"react\";\nimport myImage from \"../images/minimal.jpg\";\nimport ReactPlayer from \"react-player/lazy\";\n\n\nclass ItemComponent extends Component {\n  componentDidMount() {}\n\n  state = {};\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }; // end handleInputChangeFor\n\n  render() {\n    return (\n      <div className=\"parent\">\n        <div className=\"child item-image\">\n          <img src={require(this.props.imagePath)}></img>\n    \n          <div className=\"player-wrapper\">\n            <ReactPlayer\n              width=\"100%\"\n              url={this.props.resourceCode}\n            ></ReactPlayer>\n          </div>\n          {this.props.resourceCode}\n        </div>\n        <div className=\"child-text item-text\">\n          <h3>{this.props.title}</h3>\n          {this.props.itemText}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemComponent;\n","import React from \"react\";\nimport \"./App.css\";\nimport ItemComponent from \"./ItemComponent/ItemComponent\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App main-container\">\n        <img\n          className=\"image-small\"\n          src={require(\"./images/EricGlasses.jpg\")}\n        />\n        <h1>Eric Elvendahl</h1>\n        <div>Full Stack Engineer, Musician, Friendly Geek</div>\n\n        <div className=\"hr\"></div>\n        <h2>Education</h2>\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"Prime Digital Academy, Full Stack Engineering\"\n          itemText=\"Technologies and languages covered include React, Redux, Javascript, Node/NPM, Python, jQuery, Axios, Express, postgresql, pg, authorization/authentication, and REST/web APIs. My solo project was a secure, real-time, multi-user task list app built with React, Redux, Redux-saga, and Express.\"\n        />\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"A.A.S. in Computer Science\"\n          itemText=\"Primary languages studied were C++, Visual Basic, HTML/CSS, Javascript and Java. My final project was a digital audio delay/echo plugin developed for Jeskola Buzz in C++. It is now included in the official release of the program.\"\n        />\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"A.A.S. in Virtual Reality\"\n          itemText=\"Topics studied include 3D modeling, animation, digital graphics, 3D simulation, hardware, multimedia production. My final project was an immersive, generative 3D experience that created music and visual in real-time in response to user movement and input.\"\n        />\n        <div className=\"hr\"></div>\n        <h2>Experience</h2>\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"Producer/Composer for British University Vietnam\"\n          itemText=\"Composed original music for promotional material for 'Bottega Veneta' art exhibition in Beijing\"\n          resourceCode=\"https://vimeo.com/176879823\"\n        />\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"Producer/Composer for 'Lau'\"\n          itemText=\"Responsible for composing and recording a group of musicians for the original score.\"\n          resourceCode=\"https://vimeo.com/109447568\"\n        />\n\n        <div className=\"hr\"></div>\n        <ItemComponent\n          imagePath=\"../images/prime.png\"\n          title=\"Composer and Associate Producer for 'XJW - Coming Out of the Jehovahs Witnesses'\"\n          itemText=\"Responsible for composing and recording original music and collaborating with contributors from three continents.\"\n        />\n        <div className=\"hr\"></div>\n        <p>Contact: ericelvendahl@gmail.com github.com/ericelvendahl</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}